#include <TM1637.h>

#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

#define CE_PIN 9
#define CSN_PIN 10

#define mulai 100
#define berhenti 101
 
 
const uint64_t pipeOut = 0xE9E8F0F0E1LL;

 
RF24 radio(CE_PIN, CSN_PIN);

// Module connection pins (Digital Pins)
#define CLK 2
#define DIO 3

TM1637 tm(CLK, DIO);


unsigned long previousMillis = 0;        // will store last time 7 segment was updated
const long interval = 1000;           // Harusnya 1000
int a,b,c,d;

bool INC_1, INC_2, DEC_1,DEC_2, SR_SP, RST;
unsigned int score1 = 0, score2 = 0;

struct signal {
byte score_1;
byte score_2;
byte a;
byte b;
byte c;
byte d;
};

signal kirim;

int waktustate = berhenti;

void setup(){

  pinMode(A0, INPUT_PULLUP);
  pinMode(A1, INPUT_PULLUP);
  pinMode(A2, INPUT_PULLUP);
  pinMode(A3, INPUT_PULLUP);
  pinMode(A4, INPUT_PULLUP);
  pinMode(A5, INPUT_PULLUP);
  
  Serial.begin(9600);
  radio.begin();
  radio.openWritingPipe(pipeOut);
  reset_kirim();

  tm.init();
  tm.set(7); 
  
}

void loop(){
  baca_tombol();
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    if(waktustate == mulai){a+=1;} 
  }
  
  if(a>9){b+=1; a=0;}
  if(b==6){c+=1; b=0;}
  if(c>9){d+=1; c=0; b=0; a=0;}
  if( d>= 3){waktustate = berhenti;}

  tm.display(0,d);
  tm.display(1,c);
  tm.point(HIGH);
  tm.display(2,b);
  tm.display(3,a);

  kirim.score_1 = score1;
  kirim.score_2 = score2;
  kirim.a = a;
  kirim.b = b;
  kirim.c = c;
  kirim.d = d;

//  Serial.print(kirim.score_1);
//  Serial.print("   ");
//  Serial.print(kirim.score_2);
//  Serial.print("   ");
//  Serial.print(kirim.a);
//  Serial.print("   ");
//  Serial.print(kirim.b);
//  Serial.print("   ");
//  Serial.print(kirim.c);
//  Serial.print("   ");
//  Serial.print(kirim.d);
//  Serial.println("   ");
  
  radio.write(&kirim, sizeof(signal));
  //reset_kirim();
}

void baca_tombol(){
  INC_1 = !digitalRead(A5);
  DEC_1 = !digitalRead(A4);
  INC_2 = !digitalRead(A3);
  DEC_2 = !digitalRead(A2);
  SR_SP = !digitalRead(A0);
  RST = !digitalRead(A1);
  

  if(INC_1 == HIGH){while(INC_1 == HIGH){INC_1 = !digitalRead(A5);} score1+=1;}
  if(DEC_1 == HIGH){while(DEC_1 == HIGH){DEC_1 = !digitalRead(A4);} if(score1 != 0){score1-=1;}}
  if(INC_2 == HIGH){while(INC_2 == HIGH){INC_2 = !digitalRead(A3);} score2+=1;}
  if(DEC_2 == HIGH){while(DEC_2 == HIGH){DEC_2 = !digitalRead(A2);} if(score2 != 0){score2-=1;}}
  if(SR_SP == HIGH){while(SR_SP == HIGH){SR_SP = !digitalRead(A0);}  if(waktustate == mulai) {waktustate = berhenti;} else {waktustate = mulai;}}
  if(RST == HIGH){score1 = 0; score2 = 0; a = 0; b = 0; c = 0; d = 0; waktustate = berhenti;};
 
  }

void reset_kirim() {
  kirim.score_1 = 0;
  kirim.score_2 = 0;
  kirim.a= 0;
  kirim.b = 0;
  kirim.c = 0;
  kirim.d = 0;
  }
